// Mixins

/// Create background using a static, opaque color with the ability to change opacity
@mixin bg {
  &:before {
    content: "";
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    position: absolute;
    z-index: -1;
    pointer-events: none;
    // What will need to be defined:
    // opacity
    // border-radius
    // background-color
  }
}

@mixin bg2 {
  &:after {
    content: "";
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    position: absolute;
    z-index: -1;
    pointer-events: none;
    // What will need to be defined:
    // opacity
    // border-radius
    // background-color
  }
}

@mixin list {

}

@mixin card {
  border: 1px solid var(--secondary-color);
  background-color: var(--card-background);
}

@mixin card-light {
  border: 1px solid var(--secondary-color);
  background-color: rgba(255,255,255,0.05);
}
@mixin card-dark {
  border: 1px solid var(--secondary-color);
  background-color: rgba(0,0,0,0.5);
}

@mixin header {
  color: #fff;
  text-shadow: 2px 2px 2px #aaa;
}
@mixin header-line {
  @include header;
  display: flex;
  justify-content: center;
  align-items: center;
  &:before,
  &:after {
    content: "";
    height: 2px;
    flex-grow: 1;
  }
  &:before {
    background: linear-gradient(to left, currentColor -50%, transparent 50%);
    margin-right: 5px;
  }
  &:after {
    background: linear-gradient(to right, currentColor -50%, transparent 50%);
    margin-left: 5px;
  }
}

@mixin bar-small {

}

$hover-filter: rgba(0,0,0,0.2); // Can 100% confirm this works with the green.
$active-filter: rgba(0,0,0,0.4);
/// Button : (background / border) color will need to be defined.
@mixin button-base($color: null) {
  @include bg;
  > .contents-18-Yxp {
    z-index: 2;
  }
  &:before {
    border-radius: 3px;
    background: transparent;
    z-index: 1;
  }
  &:hover:not(:disabled) {
    &:before {
      background: $hover-filter;
    }
  }
  &:active:not(:disabled) {
    &:before {
      background: $active-filter;
    }
  }
}

@mixin button-bg($color: null) {
  background: $color;
  @include button-base;
}

@mixin button-color($color: null) {
  color: $color;
  @include button-base;
}

@mixin button-inverted($color: null) {
  @include button-color($color);
  background-color: rgba(255,255,255,0.15);
}

@mixin button-border($color: null) {
  border-color: $color;
  color: $color;
  background-color: transparent;
  @include bg;
  > .contents-18-Yxp {
    z-index: 2;
  }
  &:before {
    border-radius: 3px;
    background-color: transparent;
    z-index: 1;
  }
  &:hover:not(:disabled) {
  background-color: transparent;
    &:before {
      background-color: $color;
      opacity: 0.15;
    }
  }
  &:active:not(:disabled) {
  background-color: transparent;
    &:before {
      background-color: $color;
      opacity: 0.2;
    }
  }
}

@mixin button-ghost($color: null) {
  color: $color;
  background-color: transparent;
  @include bg;
  > .contents-18-Yxp {
    z-index: 2;
  }
  &:before {
    border-radius: 3px;
    background-color: $color;
    opacity: 0.1;
    z-index: 1;
  }
  &:hover:not(:disabled) {
  background-color: transparent;
    &:before {
      background-color: $color;
      opacity: 0.15;
    }
  }
  &:active:not(:disabled) {
  background-color: transparent;
    &:before {
      background-color: $color;
      opacity: 0.2;
    }
  }
}
