@use "backend" as *;
/* Start Buttons */
// THIS WILL **NOT** BE EVERY BUTTON. SOME WILL BE UNIQUELY THEMED.

// Button Locations:
// filled green : discord nitro
// filled yellow : pc updater
// filled red : pc plugins
// filled brand : my account
// filled primary : discord nitro
// filled grey : add server modal, user popout modal
// inverted brand : discord nitro, playing user profile modal
// outlined red : authorized whatever
// outlined brand : privacy (at bottom)
// link primary : my account -> edit
// link brand : reset nickname
// blank link : in header of channel you can edit

#{c(button lookFilled)} {
  &::before {
    transition: background-color .17s ease;
  }
  &#{c(button colorGreen)} {
    @include button-bg($color: $green);
  }

  &#{c(button colorYellow)} {
    @include button-bg($color: $yellow);
  }

  &#{c(button colorRed)} {
    @include button-bg($color: $red);
  }
  
  // &#{c(button colorWhite)} {
  // }
  // &#{c(button colorGrey)} {
  // }
  &#{c(button colorBrand)},
  &#{c(button colorBrandNew)} {
    @include button-bg($color: $primary);
  }
  &#{c(button colorLink)} {
    @include button-bg($color: $link);
  }
  // &#{c(button colorTransparent)} {
  // }
}
#{c(button lookInverted)} {
  &::before {
    transition: background-color .17s ease;
  }
  &#{c(button colorGreen)} {
    @include button-inverted($color: $green);
  }
  &#{c(button colorYellow)} {
    @include button-inverted($color: $yellow);
  }
  &#{c(button colorRed)} {
    @include button-inverted($color: $red);
  }
  // &#{c(button colorWhite)} {
  // }
  // &#{c(button colorGrey)} {
  // }
  &#{c(button colorBrand)},
  &#{c(button colorBrandNew)} {
    @include button-inverted($color: $primary);
  }
  &#{c(button colorLink)} {
    @include button-inverted($color: $link);
  }
  // &#{c(button colorTransparent)} {
  // }
}
#{c(button lookOutlined)} {
  &::before {
    transition: background-color .17s ease, opacity .17s ease;
  }
  &#{c(button colorGreen)} {
    @include button-border($color: $green);
  }
  &#{c(button colorYellow)} {
    @include button-border($color: $yellow);
  }
  &#{c(button colorRed)} {
    @include button-border($color: $red);
  }
  // &#{c(button colorWhite)} {
  // }
  // &#{c(button colorGrey)} {
  // }
  &#{c(button colorBrand)},
  &#{c(button colorBrandNew)} {
    @include button-border($color: $primary);
  }
  &#{c(button colorLink)} {
    @include button-border($color: $link);
  }
  // &#{c(button colorTransparent)} {
  // }
}
#{c(button lookLink)} {
  &#{c(button colorGreen)} {
    @include button-link($color: $green);
  }
  &#{c(button colorYellow)} {
    @include button-link($color: $yellow);
  }
  &#{c(button colorRed)} {
    @include button-link($color: $red);
  }
  // &#{c(button colorWhite)} {
  // }
  // &#{c(button colorGrey)} {
  // }
  &#{c(button colorBrand)},
  &#{c(button colorBrandNew)} {
    @include button-link($color: $primary);
  }
  &#{c(button colorLink)} {
    @include button-link($color: $link);
  }
  // &#{c(button colorTransparent)} {
  // }
}
// primary likes to be a bit... different.
#{c(main dark)},
#{c(main light)} {
  #{c(button lookFilled)} {
    &#{c(button colorPrimary)} {
      color: var(--text-normal);
      @include button-bg($color: $primary);
    }
  }
  #{c(button lookInverted)} {
    &#{c(button colorPrimary)} {
      @include button-inverted($color: $primary);
    }
  }
  #{c(button lookOutlined)} {
    &#{c(button colorPrimary)} {
      @include button-border($color: $primary);
    }
  }
  #{c(button lookLink)} {
    &#{c(button colorPrimary)} {
      @include button-link($color: $primary);
    }
  }
}
