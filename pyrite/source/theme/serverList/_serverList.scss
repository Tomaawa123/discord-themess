@use "backend" as *;
/* Start Server List */
#{c(serverList wrapper)} {
  background-color: transparent;
  &:focus {
    outline: 0;
  }
}

#{c(serverList tree)} {
  &:focus {
    outline: none;
  }
}

#{c(serverList scroller)} {
  background-color: $side;
}

#{c(serverList folder)},
#{c(serverList folder)}#{c(serverList folderHover)},
#{c(serverList folder2)},
#{c(serverList folder2)}#{c(serverList folderHover2)} {
  background-color: transparent;
}
// #{c(serverList folderIconWrapper)} {
//   @include bg;
//   @include bg2;
//   &:before,
//   &:after {
//     background-color: inherit;
//     border-radius: 33%;
//   }
// }
#{c(serverList expandedFolderBackground)},
#{c(serverList expandedFolderBackground2)} {
  background-color: $card;
}

#{c(serverList iconWrapper)} {
  #{c(serverList iconChildWrapper)} {
    background-color: rgba(255,255,255,0.05);
    transition: background-color .1s ease-out,color .1s ease-out,border-radius 0.1s ease-out;
  }
  &#{c(serverList selected)},
  &:hover {
    #{c(serverList iconChildWrapper)} {
      background-color: $primary;
    }
    #{c(serverList serverIcon)},
    #{c(serverList iconChildWrapper)} {
      border-radius: 33%;
    }
  }
  #{c(serverList serverIcon)},
  #{c(serverList iconChildWrapper)} {
    border-radius: 50%;
    transition: border-radius 0.1s;
  }
}
#{c(serverList addServer)},
#{c(serverList addServer2)} {
  background-color: rgba(255,255,255,0.05);
  color: $primary;
  border-radius: 50%;
  transition: color .15s ease-out,background-color .15s ease-out,border-radius 0.15s;
  &#{c(serverList addServerSelected)},
  &#{c(serverList addServerSelected2)} {
    background-color: $primary;
    border-radius: 33%;
    color: #fff;
  }
}

#{c(serverList pillItem)} {
  background-color: $primary;
  filter: drop-shadow(0 0 4px $primary) drop-shadow(0 0 4px $primary);
  transform: translateX(-4px) !important; // !important reason: element.style
  &[style*="height: 8px"] {
    transform: translateX(-3px) !important; // !important reason: element.style
  }
}

#{c(serverList centerDragOver)}:before, 
#{c(serverList targetDragOver)}:before {
  background-color: $green; //moving bar thing
}

#{c(serverList homeContainer)},
#{c(serverList homeContainer2)} {
  #{c(serverList iconWrapper)} {
    #{c(serverList iconChildWrapper)} {
      background: $home center/cover no-repeat scroll;
      color: transparent;
    }
    &#{c(serverList selected)},
    &:hover {
      #{c(serverList iconChildWrapper)} {
        background-color: $primary;
      }
    }
  }
}
#{c(serverList serverSeparator)},
#{c(serverList serverSeparator2)} {
  background: linear-gradient(to bottom, $secondary, transparent);
  width: 48px;
  height: 4px;
  margin-bottom: -2px;
}
#{c(serverList unreadMention)},
#{c(serverList mentionBar)},
#{c(serverList mentionBar)}:active {
  background-color: $primary;
}

#{c(main fullMotion)}#{c(main focused)} #{c(serverList numberBadge)} {
  animation: numberBadgeFlash 5s linear infinite;
  &:before {
    animation: numberBadgeFlashBefore 5s linear infinite;
  }
}
#{c(serverList numberBadge)} {
  background-color: transparent !important; // !important reason: element.style
  filter: drop-shadow(0 0 3px $secondary) drop-shadow(0 0 5px $secondary);
  @include bg;
  &:before {
    background: $primary;
    border-radius: 50%;
  }
}

#{c(serverList iconBadge)}#{c(serverList participating)} {
    background-color: $green;
    filter: none;
}

#{c(serverList placeholderInner)},
#{c(serverList placeholderInner2)} {
  background-color: $card;
}

#{c(serverList serverWrapper)} {
  > svg > foreignObject {
    mask: none;
  }
}